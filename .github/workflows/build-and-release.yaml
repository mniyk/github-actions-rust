name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { os: ubuntu-latest  , target: x86_64-unknown-linux-gnu       , use-cross: false , extension: ""   }
          - { os: macos-latest   , target: aarch64-apple-darwin           , use-cross: false , extension: ""   }
          - { os: windows-latest , target: x86_64-pc-windows-msvc         , use-cross: false , extension: .exe }
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Project Name
        shell: bash
        run: |
          echo "PROJECT_NAME=$(cargo metadata --no-deps --format-version=1 | jq -r '.packages[0].name')" >> $GITHUB_ENV

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}
          override: true
          profile: minimal

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.job.use-cross }}
          command: build
          args: --release --target ${{ matrix.job.target }}

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # 中括弧展開を利用して、動的に生成されたファイル名を指定
          # ベース: target/${{ matrix.job.target }}/release/${{ env.PROJECT_NAME }}
          # 展開: -${{ github.ref_name }}-${{ matrix.job.target }}${{ matrix.job.extension }}
          files: |
            target/${{ matrix.job.target }}/release/${{ env.PROJECT_NAME }}{-${{ github.ref_name }}-${{ matrix.job.target }}${{ matrix.job.extension }}}
